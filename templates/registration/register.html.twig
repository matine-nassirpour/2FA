{% extends 'base.html.twig' %}

{% block title %}Register{% endblock %}

{% block body %}
    <div class="container mt-3">
        <h3>Cr√©er un compte</h3>
        {{ form_start(registrationForm, {'attr':{'class':'needs-validation', 'novalidate':'novalidate'}}) }}
            {#
            <div class="form-group">
                {{ form_row(registrationForm.email, {'attr':{'class':'form-control'}}) }}
            </div>
            <div class="form-group mt-2">
                {{ form_row(registrationForm.plainPassword, {'attr':{'class':'form-control'}}) }}
            </div>
            <div class="form-check mt-2">
                {{ form_row(registrationForm.agreeTerms, {'attr':{'class':'form-check-input'}}) }}
            </div>
            #}

            {{ dump(registrationForm.email.vars) }}

            {#
            {% set class = '' %}
            {% if not registrationForm.email.vars.valid %}
                {% set class = 'is-invalid' %}
            {% endif %}
            #}
            <div class="form-group">
                <label for="{{ registrationForm.email.vars.id }}">Mail</label>
                <input
                        class="form-control {{ not registrationForm.email.vars.valid ? 'is-invalid' : '' }}"
                        type="text"
                        id="{{ registrationForm.email.vars.id }}"
                        name="{{ registrationForm.email.vars.full_name }}"
                        value="{{ registrationForm.email.vars.value }}"
                        required
                >
                {{ form_errors(registrationForm.email) }}
                {% do registrationForm.email.setRendered %}
            </div>
            <button class="btn btn-outline-secondary mt-3" type="submit">Continuer</button>

            <div class="alert alert-danger">
                {{ form_rest(registrationForm) }}
            </div>
        {{ form_end(registrationForm) }}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            console.log(forms);
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
{% endblock %}
